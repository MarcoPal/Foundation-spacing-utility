$space-sizes: (
        0,
        .5rem,
        1rem,
        2rem,
        4rem
);

// Margin

.m {
  $root: &;

  @for $j from 0 to length($breakpoint-classes) {

    @if nth($breakpoint-classes, $j+1) == 'small' {

      @for $i from 0 to length($space-sizes) {
        &-#{$i} {
          padding: nth($space-sizes, $i+1);
        }

        &t-#{$i} {
          padding-top: nth($space-sizes, $i+1);
        }

        &r-#{$i} {
          padding-right: nth($space-sizes, $i+1);
        }

        &b-#{$i} {
          padding-bottom: nth($space-sizes, $i+1);
        }

        &l-#{$i} {
          padding-left: nth($space-sizes, $i+1);
        }

        &x-#{$i} {
          padding-left: nth($space-sizes, $i+1);
          padding-right: nth($space-sizes, $i+1);
        }

        &y-#{$i} {
          padding-top: nth($space-sizes, $i+1);
          padding-bottom: nth($space-sizes, $i+1);
        }
      }

    } @else {

      @for $i from 0 to length($space-sizes) {
        &-#{nth($breakpoint-classes, $j+1)}-#{$i} {
          @include breakpoint(nth($breakpoint-classes, $j+1)) {
            padding: nth($space-sizes, $i+1);
          }
        }

        &t-#{nth($breakpoint-classes, $j+1)}-#{$i} {
          @include breakpoint(nth($breakpoint-classes, $j+1)) {
            padding-top: nth($space-sizes, $i+1);
          }
        }

        &r-#{nth($breakpoint-classes, $j+1)}-#{$i} {
          @include breakpoint(nth($breakpoint-classes, $j+1)) {
            padding-right: nth($space-sizes, $i+1);
          }
        }

        &b-#{nth($breakpoint-classes, $j+1)}-#{$i} {
          @include breakpoint(nth($breakpoint-classes, $j+1)) {
            padding-bottom: nth($space-sizes, $i+1);
          }
        }

        &l-#{nth($breakpoint-classes, $j+1)}-#{$i} {
          @include breakpoint(nth($breakpoint-classes, $j+1)) {
            padding-left: nth($space-sizes, $i+1);
          }
        }

        &x-#{nth($breakpoint-classes, $j+1)}-#{$i} {
          @include breakpoint(nth($breakpoint-classes, $j+1)) {
            padding-left: nth($space-sizes, $i+1);
            padding-right: nth($space-sizes, $i+1);
          }
        }

        &y-#{nth($breakpoint-classes, $j+1)}-#{$i} {
          @include breakpoint(nth($breakpoint-classes, $j+1)) {
            padding-top: nth($space-sizes, $i+1);
            padding-bottom: nth($space-sizes, $i+1);
          }
        }
      }
    }
  }
}

// Padding

.p {
  $root: &;

  @for $j from 0 to length($breakpoint-classes) {

    @if nth($breakpoint-classes, $j+1) == 'small' {

      @for $i from 0 to length($space-sizes) {
        &-#{$i} {
          padding: nth($space-sizes, $i+1);
        }

        &t-#{$i} {
          padding-top: nth($space-sizes, $i+1);
        }

        &r-#{$i} {
          padding-right: nth($space-sizes, $i+1);
        }

        &b-#{$i} {
          padding-bottom: nth($space-sizes, $i+1);
        }

        &l-#{$i} {
          padding-left: nth($space-sizes, $i+1);
        }

        &x-#{$i} {
          padding-left: nth($space-sizes, $i+1);
          padding-right: nth($space-sizes, $i+1);
        }

        &y-#{$i} {
          padding-top: nth($space-sizes, $i+1);
          padding-bottom: nth($space-sizes, $i+1);
        }
      }

    } @else {

      @for $i from 0 to length($space-sizes) {
        &-#{nth($breakpoint-classes, $j+1)}-#{$i} {
          @include breakpoint(nth($breakpoint-classes, $j+1)) {
            padding: nth($space-sizes, $i+1);
          }
        }

        &t-#{nth($breakpoint-classes, $j+1)}-#{$i} {
          @include breakpoint(nth($breakpoint-classes, $j+1)) {
            padding-top: nth($space-sizes, $i+1);
          }
        }

        &r-#{nth($breakpoint-classes, $j+1)}-#{$i} {
          @include breakpoint(nth($breakpoint-classes, $j+1)) {
            padding-right: nth($space-sizes, $i+1);
          }
        }

        &b-#{nth($breakpoint-classes, $j+1)}-#{$i} {
          @include breakpoint(nth($breakpoint-classes, $j+1)) {
            padding-bottom: nth($space-sizes, $i+1);
          }
        }

        &l-#{nth($breakpoint-classes, $j+1)}-#{$i} {
          @include breakpoint(nth($breakpoint-classes, $j+1)) {
            padding-left: nth($space-sizes, $i+1);
          }
        }

        &x-#{nth($breakpoint-classes, $j+1)}-#{$i} {
          @include breakpoint(nth($breakpoint-classes, $j+1)) {
            padding-left: nth($space-sizes, $i+1);
            padding-right: nth($space-sizes, $i+1);
          }
        }

        &y-#{nth($breakpoint-classes, $j+1)}-#{$i} {
          @include breakpoint(nth($breakpoint-classes, $j+1)) {
            padding-top: nth($space-sizes, $i+1);
            padding-bottom: nth($space-sizes, $i+1);
          }
        }
      }
    }
  }
}